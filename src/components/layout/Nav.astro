---
import { twMerge } from "tailwind-merge"
import NavLink from "./NavLink.astro"

interface Props {
    class?: string
}

const { class: className } = Astro.props

const pathname = Astro.url.pathname

const routes = {
    About: "/",
    Resum√©: "/resume",
    Contact: "/contact",
}

const classes = twMerge(
    [
        "hidden",
        "justify-between",
        "items-center",
        "w-full",
        "md:flex",
        "md:gap-4",
        "md:w-auto",
        "md:order-1",
    ],
    className,
)
---

<button
    id="mobile-menu-button"
    type="button"
    class="p-2 text-sm text-neutral-900 border rounded-lg md:hidden hover:bg-primary-200 dark:text-neutral-400 dark:hover:bg-neutral-800"
    aria-controls="mobile-menu"
    aria-expanded="false"
>
    <span class="sr-only">Open main menu</span>
    <svg
        class="w-6 h-6"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
        ><path
            fill-rule="evenodd"
            d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
            clip-rule="evenodd"
        ></path></svg
    >
    <svg
        class="hidden w-6 h-6"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
        ><path
            fill-rule="evenodd"
            d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
            clip-rule="evenodd"
        ></path></svg
    >
</button>

<nav
    class={classes}
    id="mobile-menu"
>
    <ul class="flex flex-col gap-4 mt-4 font-medium md:flex-row md:mt-0">
        {
            Object.entries(routes).map(([text, href]) => (
                <li>
                    <NavLink
                        text={text}
                        href={href}
                        selected={href === pathname}
                        class="w-full flex justify-center"
                    />
                </li>
            ))
        }
    </ul>
</nav>

<script is:inline>
    document.addEventListener("astro:page-load", () => {
        const button = document.getElementById("mobile-menu-button")
        const target = document.getElementById("mobile-menu")

        if (target && button) {
            let open = false

            button.addEventListener("click", () => {
                if (open) {
                    target.classList.remove("block")
                    target.classList.add("hidden")
                } else {
                    target.classList.remove("hidden")
                    target.classList.add("block")
                }

                open = !open
            })
        }
    })
</script>
